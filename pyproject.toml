[project]
name = "css-dev-automator"
version = "0.1.0"
description = "CSS Dev Automator - GUI-based tool for automating C# code generation and AI prompt processing for .NET ERP applications"
requires-python = ">=3.13"
authors = [
    { name = "CSS Development Team" }
]
keywords = ["automation", "code-generation", "dotnet", "gui", "stored-procedures"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Operating System :: Microsoft :: Windows",
    "Topic :: Software Development :: Code Generators",
    "Topic :: Database",
]

dependencies = [
    "fastexcel>=0.14.0", # High-performance Excel file reading
    "polars>=1.30.0", # High-performance DataFrame operations
    "pyodbc>=5.2.0", # SQL Server database connectivity
    "PySide6>=6.8.0", # Modern Qt6-based GUI framework
]

[project.optional-dependencies]
dev = [
    "ruff>=0.11.13",            # Fast Python linter and formatter
    "pyinstaller>=6.0.0",      # For building executables
    "pytest>=8.0.0",           # Testing framework
    "pytest-qt>=4.4.0",        # PySide6/PyQt testing support
]

[project.scripts]
css-dev-automator = "main:main"

[project.gui-scripts]
css-dev-automator-gui = "main:main"

# UV-specific configuration
[tool.uv]
dev-dependencies = [
    "ruff>=0.11.13",
    "pyinstaller>=6.0.0",
    "pytest>=8.0.0",
    "pytest-qt>=4.4.0",
]

# UV workspace configuration
[tool.uv.workspace]
members = ["."]

# UV sources configuration for faster resolution
[tool.uv.sources]
# Use PyPI for all dependencies (default behavior)

# Ruff configuration for code quality
[tool.ruff]
target-version = "py313"
line-length = 100

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by line-length)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

# Build system configuration
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Hatchling configuration for package discovery
[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.hatch.build.targets.sdist]
include = [
    "src/",
    "Templates/",
    "config.json",
    "main.py",
]
